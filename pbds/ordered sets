#include<bits/stdc++.h>
using namespace std;
#define ll long long int


#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
//declare ordered_set setname
//setname.find_by_order(k): It returns to an iterator to the kth element (counting from zero) in the set in O(logn)
//setname.order_of_key(k) : It returns to the number of items that are strictly smaller than our item k in O(logn) time

#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL); cout.tie(NULL);

	ll t;
	cin >> t;

	for (int tc = 1; tc <= t; tc++) {
		cout << "Case " << tc << ": ";

	}
}
